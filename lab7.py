"""1.Напишіть програму, яка створює кортеж зі списку чисел, а потім виводить на екран всі числа, які менші за задане число n. Умова: користувач вводить число n,
і щоб створити новий список result, який містить всі числа з кортежу, які менші за n, реалізувати за допомогою генератора списків."""

numbers = (1, 3, 5, 7, 9, 11, 13, 15) # кортеж з числами

n = int(input("Введіть число n: ")) # користувач вводить число n

result = [num for num in numbers if num < n] # генератор списків, щоб створити новий список result, який містить всі числа з кортежу, які менші за n

print("Числа, які менші за", n, ":", result) # виводимо на екран всі числа, які менші за n


strings = ('Hello', 'Misery', 'Python')
result = ','.join(strings) # з'єднуємо рядки з комою як роздільником
print(result) # виводимо результат на екран
#3
library = {
    'Пригоди Гекльберрі Фінна': {'автор': 'Марк Твен', 'рік видання': 1884, 'кількість сторінок': 366},
    'Майстер і Маргарита': {'автор': 'Михайло Булгаков', 'рік видання': 1967, 'кількість сторінок': 402},
    '1984': {'автор': 'Джордж Орвелл', 'рік видання': 1949, 'кількість сторінок': 328},
    'Три товариші': {'автор': 'Еріх Марія Ремарк', 'рік видання': 1936, 'кількість сторінок': 448}
}

book_title = input("Введіть назву книги: ")

if book_title in library:
    book_info = library[book_title] # получаем информацию про книгу
    print("Інформація про книгу '{0}':".format(book_title)) ## Этот метод позволяет форматировать строку, вставляя в нее на место плейсхолдеров определенные значения.
    ## Для вставки в строку используются специальные параметры, которые обрамляются фигурными скобками ({}) Этот метод позволяет форматировать строку, вставляя в нее на место плейсхолдеров определенные значения. Для вставки в строку используются специальные параметры, которые обрамляются фигурными скобками ({})

    print("Автор:", book_info['автор'])
    print("Рік видання:", book_info['рік видання'])
    print("Кількість сторінок:", book_info['кількість сторінок'])
else:
    print("Книга '{0}' не знайдена в бібліотеці.".format(book_title)) # выводим на консоль если книга не найдена


#4
student = {
    'Чижиков': {'курс': 'Другий', 'назва групи': 'KI-20-1', 'код спеціальності': 123},
    'Патаушкін': {'курс': 'Третій', 'назва групи': 'ФСI-13-1', 'код спеціальності': 228},
    'Цаль': {'курс': 'Перший', 'назва групи': 'КН-19-1', 'код спеціальності': 122},

}

student_surname = input("Введіть фамілію студента: ")

if student_surname in student:
    student_info = student[student_surname] # получаем информацию про книгу
    print("Інформація прo студента '{0}':".format(student_surname))

    print("Куrс:", student_info['курс'])
    print("Назва групи:", student_info['назва групи'])
    print("Код спеціальності:", student_info['код спеціальності'])
else:
    print("Студент '{0}' не знайден у базі данних.".format(student_surname)) # выводим на консоль если книга не найдена



#5
phonebook = {
    'Григорій Непробачений': ['555-1234', '555-5678'],
    'Квізин Монтажер': ['555-9876', '555-4321'],
    'Скарлет Хоробрий': ['555-1111', '555-2222', '555-3333']
}
contact_name = input("Введіть ім'я контакту: ")
phone_number = input("Введіть номер телефону: ")

def addphonenumber():
    contactname = input("Введіть ім'я контакту: ")
    phonenumbers = input("Введіть новий номер телефону: ")
    if contact_name in phonebook:
        phonebook[contactname].append(phonenumbers)
    else:
        phonebook[contact_name] = phonenumbers

addphonenumber()  # добавляем новый контакт

# выводим все контакты
for contactname, phonenumbers in phonebook.items():
    print(contactname + ': ' + ', '.join(phonenumbers))